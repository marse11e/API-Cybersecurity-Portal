# Generated by Django 5.1.7 on 2025-05-16 02:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0002_alter_user_email'),
    ]

    operations = [
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Название теста', max_length=255, verbose_name='Название')),
                ('description', models.TextField(help_text='Краткое описание теста', verbose_name='Краткое описание')),
                ('long_description', models.TextField(blank=True, help_text='Подробное описание теста', verbose_name='Полное описание')),
                ('image', models.URLField(help_text='URL изображения для теста', verbose_name='Изображение')),
                ('level', models.CharField(choices=[('Начальный', 'Начальный'), ('Средний', 'Средний'), ('Продвинутый', 'Продвинутый')], help_text='Уровень сложности теста', max_length=20, verbose_name='Уровень сложности')),
                ('duration', models.CharField(help_text='Продолжительность прохождения теста', max_length=50, verbose_name='Продолжительность')),
                ('questions_count', models.PositiveIntegerField(default=0, help_text='Общее количество вопросов в тесте', verbose_name='Количество вопросов')),
                ('participants', models.PositiveIntegerField(default=0, help_text='Количество участников, прошедших тест', verbose_name='Участники')),
                ('rating', models.DecimalField(decimal_places=1, default=0.0, help_text='Средний рейтинг теста', max_digits=3, verbose_name='Рейтинг')),
                ('passing_score', models.PositiveIntegerField(default=70, help_text='Минимальный процент правильных ответов для прохождения теста', verbose_name='Проходной балл')),
                ('max_attempts', models.PositiveIntegerField(default=0, help_text='Максимальное количество попыток прохождения теста (0 = без ограничений)', verbose_name='Максимальное количество попыток')),
                ('featured', models.BooleanField(default=False, help_text='Отметка о том, что тест является рекомендованным', verbose_name='Рекомендованный')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания теста', verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата последнего обновления теста', verbose_name='Дата обновления')),
                ('category', models.ForeignKey(help_text='Категория, к которой относится тест', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tests', to='main.category', verbose_name='Категория')),
                ('tags', models.ManyToManyField(help_text='Теги, связанные с тестом', related_name='tests', to='main.tag', verbose_name='Теги')),
            ],
            options={
                'verbose_name': 'Тест',
                'verbose_name_plural': 'Тесты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TestAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True, help_text='Время начала попытки', verbose_name='Время начала')),
                ('end_time', models.DateTimeField(blank=True, help_text='Время окончания попытки', null=True, verbose_name='Время окончания')),
                ('status', models.CharField(choices=[('in_progress', 'В процессе'), ('completed', 'Завершен'), ('expired', 'Истек')], default='in_progress', help_text='Текущий статус попытки', max_length=20, verbose_name='Статус')),
                ('score', models.PositiveIntegerField(blank=True, help_text='Итоговый балл в процентах', null=True, verbose_name='Балл')),
                ('answers', models.JSONField(default=dict, help_text='Ответы пользователя в формате JSON', verbose_name='Ответы')),
                ('attempt_number', models.PositiveIntegerField(default=1, help_text='Порядковый номер попытки пользователя для данного теста', verbose_name='Номер попытки')),
                ('test', models.ForeignKey(help_text='Тест, который проходит пользователь', on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='main.test', verbose_name='Тест')),
                ('user', models.ForeignKey(help_text='Пользователь, выполняющий тест', on_delete=django.db.models.deletion.CASCADE, related_name='test_attempts', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Попытка теста',
                'verbose_name_plural': 'Попытки тестов',
                'ordering': ['-start_time'],
                'unique_together': {('user', 'test', 'attempt_number')},
            },
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_questions', models.PositiveIntegerField(help_text='Общее количество вопросов в тесте', verbose_name='Всего вопросов')),
                ('correct_answers', models.PositiveIntegerField(help_text='Количество правильных ответов', verbose_name='Правильных ответов')),
                ('score_percent', models.PositiveIntegerField(help_text='Процент правильных ответов', verbose_name='Процент правильных')),
                ('time_spent', models.DurationField(help_text='Общее время, затраченное на тест', verbose_name='Затраченное время')),
                ('passed', models.BooleanField(help_text='Флаг, указывающий, что тест пройден успешно', verbose_name='Пройден')),
                ('feedback', models.TextField(blank=True, help_text='Отзыв системы о результатах', verbose_name='Отзыв')),
                ('detailed_results', models.JSONField(default=dict, help_text='Детальная информация о результатах по темам и вопросам', verbose_name='Детальные результаты')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания результата', verbose_name='Дата создания')),
                ('attempt', models.OneToOneField(help_text='Попытка теста, для которой сохраняется результат', on_delete=django.db.models.deletion.CASCADE, related_name='result', to='main.testattempt', verbose_name='Попытка')),
            ],
            options={
                'verbose_name': 'Результат теста',
                'verbose_name_plural': 'Результаты тестов',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TestQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(blank=True, help_text='Тема или раздел, к которому относится вопрос', max_length=100, verbose_name='Тема')),
                ('question_text', models.TextField(help_text='Формулировка вопроса', verbose_name='Текст вопроса')),
                ('question_type', models.CharField(choices=[('single', 'Один вариант'), ('multiple', 'Несколько вариантов'), ('text', 'Текстовый ответ'), ('true_false', 'Истина/Ложь')], default='single', help_text='Тип вопроса (один вариант, несколько и т.д.)', max_length=20, verbose_name='Тип вопроса')),
                ('options', models.JSONField(default=list, help_text='Варианты ответов в формате JSON для выбора', verbose_name='Варианты ответов')),
                ('correct_answer', models.JSONField(help_text='Правильный ответ или ответы в формате JSON', verbose_name='Правильный ответ')),
                ('explanation', models.TextField(blank=True, help_text='Объяснение правильного ответа', verbose_name='Объяснение')),
                ('difficulty', models.PositiveIntegerField(default=1, help_text='Уровень сложности вопроса от 1 до 5', verbose_name='Сложность')),
                ('points', models.PositiveIntegerField(default=1, help_text='Количество баллов за правильный ответ', verbose_name='Баллы')),
                ('order', models.PositiveIntegerField(default=0, help_text='Порядок отображения вопроса в тесте', verbose_name='Порядок')),
                ('test', models.ForeignKey(help_text='Тест, к которому относится вопрос', on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='main.test', verbose_name='Тест')),
            ],
            options={
                'verbose_name': 'Вопрос теста',
                'verbose_name_plural': 'Вопросы тестов',
                'ordering': ['test', 'order'],
                'unique_together': {('test', 'order')},
            },
        ),
    ]
